C51 COMPILER V9.60.7.0   THU_VIEN_LCD                                                      04/22/2025 08:15:09 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE THU_VIEN_LCD
OBJECT MODULE PLACED IN .\Objects\Thu_Vien_LCD.obj
COMPILER INVOKED BY: D:\Program_Store\Application\KeilC\C51\BIN\C51.EXE Thu_Vien_LCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\Thu_Vien_LCD.lst) TABS(2) OBJECT(.\Objects\Thu_Vien_LCD.obj)

line level    source

   1          // By PhamHieuu
   2          #include <REGX51.H>
   3          #include <Thu_Vien_LCD.h>
   4          
   5          #define LCD_RS  P1_0
   6          #define LCD_RW  P1_1
   7          #define LCD_EN  P1_2
   8          #define LCD_D4  P1_3
   9          #define LCD_D5  P1_4
  10          #define LCD_D6  P1_5
  11          #define LCD_D7  P1_6
  12          
  13          void delay_us(unsigned int t){
  14   1              unsigned int i;
  15   1              for(i=0;i<t;i++);
  16   1      }
  17          void delay_ms(unsigned int t){
  18   1              unsigned int i,j;
  19   1              for(i=0;i<t;i++)
  20   1              for(j=0;j<125;j++);}
  21          void LCD_Enable(void){
  22   1              LCD_EN =1;
  23   1              delay_us(3);
  24   1              LCD_EN =0;
  25   1              delay_us(50); 
  26   1      }
  27          void LCD_Send4Bit(unsigned char Data){
  28   1              LCD_D4=Data & 0x01;
  29   1              LCD_D5=(Data>>1)&1;
  30   1              LCD_D6=(Data>>2)&1;
  31   1              LCD_D7=(Data>>3)&1;
  32   1      }
  33          void LCD_SendCommand(unsigned char command){
  34   1              LCD_Send4Bit(command >>4);/* Send 4 bit high */
  35   1              LCD_Enable();
  36   1              LCD_Send4Bit(command); /* Send 4 bit low*/
  37   1              LCD_Enable();
  38   1      }
  39          void LCD_Clear(){// Xoa man hinh
  40   1              LCD_SendCommand(0x01); 
  41   1              delay_us(10);
  42   1      }
  43          void LCD_Init(){
  44   1              LCD_Send4Bit(0x00);   //turn on LCD
  45   1              delay_ms(20);
  46   1              LCD_RS=0;
  47   1              LCD_RW=0;
  48   1              LCD_Send4Bit(0x03);   //function setting
  49   1              LCD_Enable();
  50   1              delay_ms(5);
  51   1              LCD_Enable();
  52   1              delay_us(100);
  53   1              LCD_Enable();
  54   1              LCD_Send4Bit(0x02);   //di chuyen con tro ve dau man hnh
C51 COMPILER V9.60.7.0   THU_VIEN_LCD                                                      04/22/2025 08:15:09 PAGE 2   

  55   1              LCD_Enable();
  56   1              LCD_SendCommand( 0x28 ); //lua chon che do 4 bit
  57   1              LCD_SendCommand( 0x0c);  // bat hien thi va tat con tro di
  58   1              LCD_SendCommand( 0x06 );
  59   1              LCD_SendCommand(0x01);
  60   1      }
  61          void LCD_Gotoxy(unsigned char x, unsigned char y){
  62   1              unsigned char address;
  63   1              if(!y)address=(0x80+x);
  64   1              else address=(0xc0+x);
  65   1              delay_us(1000);
  66   1              LCD_SendCommand(address);
  67   1              delay_us(50);
  68   1      }
  69          void LCD_PutChar(unsigned char Data){
  70   1              LCD_RS=1;
  71   1              LCD_SendCommand(Data);
  72   1              LCD_RS=0 ;
  73   1      }
  74          void LCD_Puts(char *s){
  75   1              while (*s){
  76   2                      LCD_PutChar(*s);
  77   2                      s++;
  78   2              }
  79   1      }
  80          void LCD_PutNumber(int number)
  81          {
  82   1        if(number <= 9)
  83   1        {
  84   2          LCD_PutChar(number + 48);
  85   2        }
  86   1        else if(number > 9 && number < 100)
  87   1        {
  88   2          LCD_PutChar(number/10 + 48);
  89   2          LCD_PutChar(number%10 + 48);
  90   2        }
  91   1        else if(number > 99 && number < 1000)
  92   1        {
  93   2          LCD_PutChar(number/100 + 48);
  94   2          LCD_PutChar(number/10%10 + 48);
  95   2          LCD_PutChar(number%10 + 48);
  96   2        }
  97   1        else if(number > 999 && number < 10000)
  98   1        {
  99   2          LCD_PutChar(number/1000 + 48);
 100   2          LCD_PutChar(number/100%10 + 48);
 101   2          LCD_PutChar(number/10%10 + 48);
 102   2          LCD_PutChar(number%10 + 48);
 103   2        }
 104   1        
 105   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    516    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   THU_VIEN_LCD                                                      04/22/2025 08:15:09 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
