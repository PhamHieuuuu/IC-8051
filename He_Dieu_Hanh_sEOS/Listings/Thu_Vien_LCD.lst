C51 COMPILER V9.60.7.0   THU_VIEN_LCD                                                      02/23/2025 23:58:45 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE THU_VIEN_LCD
OBJECT MODULE PLACED IN .\Objects\Thu_Vien_LCD.obj
COMPILER INVOKED BY: D:\Program_Store\Application\KeilC\C51\BIN\C51.EXE Thu_Vien_LCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\Thu_Vien_LCD.lst) TABS(2) OBJECT(.\Objects\Thu_Vien_LCD.obj)

line level    source

   1          #include <REGX51.H>
   2          #include <Thu_Vien_LCD.h>
   3          
   4          #define LCD_RS  P1_2
   5          #define LCD_RW  P1_3
   6          #define LCD_EN  P3_2
   7          #define LCD_D4  P3_4
   8          #define LCD_D5  P3_5
   9          #define LCD_D6  P3_6
  10          #define LCD_D7  P3_7
  11          
  12          void delay_us(unsigned int t){
  13   1              unsigned int i;
  14   1              for(i=0;i<t;i++);
  15   1      }
  16          void delay_ms(unsigned int t){
  17   1              unsigned int i,j;
  18   1              for(i=0;i<t;i++)
  19   1              for(j=0;j<125;j++);}
  20          void LCD_Enable(void){
  21   1              LCD_EN =1;
  22   1              delay_us(3);
  23   1              LCD_EN =0;
  24   1              delay_us(50); 
  25   1      }
  26          void LCD_Send4Bit(unsigned char Data){
  27   1              LCD_D4=Data & 0x01;
  28   1              LCD_D5=(Data>>1)&1;
  29   1              LCD_D6=(Data>>2)&1;
  30   1              LCD_D7=(Data>>3)&1;
  31   1      }
  32          void LCD_SendCommand(unsigned char command){
  33   1              LCD_Send4Bit(command >>4);/* Send 4 bit high */
  34   1              LCD_Enable();
  35   1              LCD_Send4Bit(command); /* Send 4 bit low*/
  36   1              LCD_Enable();
  37   1      }
  38          void LCD_Clear(){// Xoa man hinh
  39   1              LCD_SendCommand(0x01); 
  40   1              delay_us(10);
  41   1      }
  42          void LCD_Init(){
  43   1              LCD_Send4Bit(0x00);   //turn on LCD
  44   1              delay_ms(20);
  45   1              LCD_RS=0;
  46   1              LCD_RW=0;
  47   1              LCD_Send4Bit(0x03);   //function setting
  48   1              LCD_Enable();
  49   1              delay_ms(5);
  50   1              LCD_Enable();
  51   1              delay_us(100);
  52   1              LCD_Enable();
  53   1              LCD_Send4Bit(0x02);   //di chuyen con tro ve dau man hnh
  54   1              LCD_Enable();
C51 COMPILER V9.60.7.0   THU_VIEN_LCD                                                      02/23/2025 23:58:45 PAGE 2   

  55   1              LCD_SendCommand( 0x28 ); //lua chon che do 4 bit
  56   1              LCD_SendCommand( 0x0c);  // bat hien thi va tat con tro di
  57   1              LCD_SendCommand( 0x06 );
  58   1              LCD_SendCommand(0x01);
  59   1      }
  60          void LCD_Gotoxy(unsigned char x, unsigned char y){
  61   1          unsigned char address;
  62   1          switch(y){
  63   2              case 0: address = 0x80 + x; break;  // Dòng 1
  64   2              case 1: address = 0xC0 + x; break;  // Dòng 2
  65   2              case 2: address = 0x94 + x; break;  // Dòng 3
  66   2              case 3: address = 0xD4 + x; break;  // Dòng 4
  67   2              default: address = 0x80 + x; break; // M?c d?nh v? dòng 1
  68   2          }
  69   1          delay_us(1000);
  70   1          LCD_SendCommand(address);
  71   1          delay_us(50);
  72   1      }
  73          
  74          void LCD_PutChar(unsigned char Data){
  75   1              LCD_RS=1;
  76   1              LCD_SendCommand(Data);
  77   1              LCD_RS=0 ;
  78   1      }
  79          void LCD_Puts(char *s){
  80   1              while (*s){
  81   2                      LCD_PutChar(*s);
  82   2                      s++;
  83   2              }
  84   1      }
  85          void LCD_PutNumber(int number)
  86          {
  87   1        if(number <= 9)
  88   1        {
  89   2          LCD_PutChar(number + 48);
  90   2        }
  91   1        else if(number > 9 && number < 100)
  92   1        {
  93   2          LCD_PutChar(number/10 + 48);
  94   2          LCD_PutChar(number%10 + 48);
  95   2        }
  96   1        else if(number > 99 && number < 1000)
  97   1        {
  98   2          LCD_PutChar(number/100 + 48);
  99   2          LCD_PutChar(number/10%10 + 48);
 100   2          LCD_PutChar(number%10 + 48);
 101   2        }
 102   1        else if(number > 999 && number < 10000)
 103   1        {
 104   2          LCD_PutChar(number/1000 + 48);
 105   2          LCD_PutChar(number/100%10 + 48);
 106   2          LCD_PutChar(number/10%10 + 48);
 107   2          LCD_PutChar(number%10 + 48);
 108   2        }
 109   1        
 110   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    541    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   THU_VIEN_LCD                                                      02/23/2025 23:58:45 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
